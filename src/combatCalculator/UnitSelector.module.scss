$unitMinWidth: 50px;
$unitMaxWidth: 80px;
$unitCount: 20;
/*
  max/min width is based on a default of 10 units per row.
  At these sizes we need to adjust row wrapping.
*/
$minWidth: $unitMinWidth * 10;
$maxWidth: $unitMaxWidth * 10;

.unitSelector {
  display: grid;
  grid-template-columns: repeat(2, minMax($unitMinWidth, $unitMaxWidth));
  grid-template-rows: min-content min-content;
  grid-gap: 0px;
  grid-auto-flow: row;
  justify-content: center;
}

@container(max-width: #{$minWidth}) {
  .unitSelector {
    grid-template-columns: repeat(auto-fill, $unitMinWidth);
  }
}

@container(min-width: #{$maxWidth}) {
  .unitSelector {
    grid-template-columns: repeat(auto-fill, minMax($unitMinWidth, $unitMaxWidth));
  }
}

:global(.combat-left-side) .unitSelector {
  justify-content: end;
}

:global(.combat-right-side) .unitSelector {
  justify-content: start;
}

.unit {
  aspect-ratio: 1 / 1.5;
  background-color: var(--interactive-off);
  border: 2px solid var(--border-interactive-off);
  border-radius: var(--radius-sm);
  padding: 8px;
  position: relative;
  text-align: center;
}

.unit[data-selected] {
  background-color: var(--interactive-on);
  border-color: var(--border-interactive-on);
}

.unitImage {
  width: 100%;
  height: auto;
}

:global(.combat-left-side) .unitImage {
  transform: scaleX(-1);
}

.unitName {
  background: rgba(0, 0, 0, 0.5);
  font-size: 12px;
  font-weight: bold;
  position: absolute;
  padding: 8px;
  text-align: center;
  bottom: 0;
  left: 0;
  right: 0;
}

.modEffect {
  background: rgba(0, 0, 0, 0.8);
  font-size: 14px;
  line-height: 14px;
  font-weight: bold;
  position: absolute;
  padding: 8px;
  text-align: center;
  top: 0;
  left: 0;
  height: 30px;
  min-width: 30px;
}

.positiveEffect {
  color: var(--positive-change);
}

.negativeEffect {
  color: var(--negative-change);
}