.unitSelector {
  display: grid;
  height: 100%;
  width: 100%;
  // TODO: Add container queries to adjust number of cols based on size?
  grid-template-columns: repeat(7, 1fr);
  grid-template-rows: repeat(4, 1fr);
  grid-gap: 3px;
}

.unit {
  background-color: var(--background-L1);
  border: 2px solid var(--border-interactive-off);
  border-radius: var(--radius-sm);
  position: relative;
  text-align: center;
  min-width: 60px;
}

.unitCardSizer {
  min-width: 60px;
  position: relative;
}

.unitSelector::after {
  content: "";
  flex-grow: 99;
  height: 0;
}

.unit[data-selected] {
  border-color: var(--border-interactive-on);
}

.unitImage {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center 25%;
}

:global(.combat-left-side) .unitImage {
  transform: scaleX(-1);
}

.unitName {
  background: rgba(0, 0, 0, 0.7);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 14px;
  position: absolute;
  padding: 2px 2px;
  text-align: center;
  bottom: 0;
  left: 0;
  right: 0;
  text-transform: uppercase;
  text-shadow: 1px 2px 1px #000;

  span {
    // force text to wrap if it's too long
    height: 1lh;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

.levelIcon {
  flex-shrink: 0;
  width: 16px;
  height: 16px;
  margin: -2px 0 -2px 4px;
  filter: drop-shadow(1px 2px 1px #000);
}

.levelButton {
  background: var(--interactive-off);
  border-bottom: 1px solid var(--border-interactive-off);
  border-right: 1px solid var(--border-interactive-off);
  border-radius: 1px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 14px;
  font-weight: bold;
  position: absolute;
  top: 0;
  left: 0;
  margin: 0;
  padding: 0;
  width: 30px;
  height: 30px;
  z-index: 2;
}

.modEffect {
  background: rgba(0, 0, 0, 0.8);
  font-size: 14px;
  line-height: 14px;
  font-weight: bold;
  position: absolute;
  padding: 8px;
  text-align: center;
  top: 0;
  right: 0;
  height: 30px;
  min-width: 30px;
  cursor: default;
}

.positiveEffect {
  color: var(--positive-change);
}

.negativeEffect {
  color: var(--negative-change);
}